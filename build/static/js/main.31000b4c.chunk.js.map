{"version":3,"sources":["services/persons.js","components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","components/App.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","put","then","response","data","delete","Filter","props","value","onChange","handleChange","PersonForm","onSubmit","handleSubmit","nameValue","handleNameUpdate","required","numberValue","handlePhoneUpdate","type","Persons","filter","map","person","key","name","number","onClick","handleDelete","Notification","errorMessage","className","successMessage","App","useState","persons","setPersons","useEffect","personsService","console","log","newName","setNewName","newPhone","setNewPhone","newFilter","setNewFilter","setSuccessMessage","setErrorMessage","personsToShow","toLowerCase","indexOf","event","target","preventDefault","personObject","concat","setTimeout","window","confirm","find","newPerson","personDb","catch","error","n","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31000b4c.chunk.js","sourcesContent":["import axios from 'axios'\r\n// const baseUrl = 'http://localhost:3001/api/persons';\r\nconst baseUrl = 'https://salty-river-40592.herokuapp.com/api/persons';\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n  }\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject)\r\n  }\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\nconst deleteUser = id => {\r\n    return axios.delete(baseUrl+'/'+id)\r\n}\r\n  \r\nexport default { getAll, create, update, deleteUser }","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n    return(\r\n        <div>\r\n            filter shown with: <input value={props.value} onChange={props.handleChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter;","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            name: <input value={props.nameValue} onChange={props.handleNameUpdate} required/>\r\n        </div>\r\n        <div>\r\n            number: <input value={props.numberValue} onChange={props.handlePhoneUpdate} required/>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm;","\r\nimport React from 'react'\r\n\r\nconst Persons = (props) => {\r\n\r\n     return(\r\n        <div>\r\n            {props.filter.map(person=>{\r\n                return(\r\n                    <div key={person.name}>\r\n                        <span>{person.name} {person.number}</span>\r\n                        <button onClick={()=>props.handleDelete(person)}>delete</button>\r\n                    </div>\r\n                )}) \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons;\r\n","\r\nimport React from 'react'\r\nimport '../../src/index.css'\r\n\r\nconst Notification = (props) => {\r\n\r\n     return(\r\n         props.errorMessage?\r\n        <div className=\"error\">\r\n            {props.errorMessage}\r\n        </div>:\r\n        props.successMessage?\r\n        <div className=\"success\">\r\n            {props.successMessage}\r\n        </div> :\r\n        null\r\n    )\r\n}\r\n\r\nexport default Notification;","import React, { useState, useEffect } from 'react'\r\nimport personsService from '../services/persons';\r\nimport Filter from './Filter';\r\nimport PersonForm from './PersonForm';\r\nimport Persons from './Persons';\r\nimport Notification from './Notification';\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([]); \r\n\r\n  useEffect(() => {\r\n    personsService\r\n      .getAll()\r\n      .then(response => {\r\n        console.log('promise fulfilled')\r\n        setPersons(response.data)\r\n      })\r\n  }, [])\r\n\r\n  const [ newName, setNewName ] = useState('');\r\n  const [ newPhone, setNewPhone ] = useState('');\r\n  const [ newFilter, setNewFilter ] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n\r\n  const addName = (event) =>{\r\n      event.preventDefault();\r\n      if(persons.map(person=>person.name).indexOf(newName) === -1){\r\n          const personObject={name:newName,number:newPhone};\r\n\r\n          personsService\r\n          .create(personObject)\r\n          .then(() => {\r\n            setPersons(persons.concat(personObject));\r\n            setSuccessMessage(\r\n              `Number was added`\r\n            )\r\n            setTimeout(() => {\r\n              setSuccessMessage(null)\r\n            }, 5000);\r\n\r\n            setNewName('');\r\n            setNewPhone('');\r\n          })\r\n      } else{\r\n        if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one ?`)) { \r\n          const person = persons.find(person => person.name === newName);\r\n          const newPerson={...person,number:newPhone};\r\n          personsService\r\n            .update(person.id,newPerson)\r\n            .then(() => {\r\n              setPersons(persons.map(personDb => personDb.id !== person.id? personDb: newPerson));\r\n              setSuccessMessage(\r\n                `Number was updated`\r\n              )\r\n              setTimeout(() => {\r\n                setSuccessMessage(null)\r\n              }, 5000);\r\n\r\n              setNewName('');\r\n              setNewPhone('');\r\n            })\r\n            .catch(error => {\r\n              setErrorMessage(\r\n                `Person ${person.name} was already removed from server`\r\n              )\r\n              setTimeout(() => {\r\n                setErrorMessage(null)\r\n              }, 5000)\r\n\r\n              setPersons(persons.filter(n => n.id !== person.id))  \r\n            })    \r\n          }\r\n      }\r\n  }\r\n\r\n  const updateName = (event) =>{\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const updatePhone = (event) =>{\r\n    setNewPhone(event.target.value)\r\n  }\r\n  \r\n  const updateFilter = (event) =>{\r\n    setNewFilter(event.target.value);\r\n  }\r\n\r\n  const deleteNumber = (person) =>{\r\n \r\n    if (window.confirm(`Delete ${person.name} ?`)) { \r\n        personsService\r\n            .deleteUser(person.id)\r\n            .then(() => {\r\n                setPersons(persons.filter(data=> data.id !== person.id))\r\n            })\r\n    }\r\n}\r\n\r\n\r\n  const personsToShow=newFilter? \r\n  persons.filter(person=>person.name.toLowerCase().indexOf(newFilter.toLowerCase()) !== -1) \r\n  : persons;\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification errorMessage={errorMessage} successMessage={successMessage} />\r\n      <Filter value={newFilter} handleChange={updateFilter}/>\r\n      <h2>Add a new</h2>\r\n      <PersonForm \r\n        handleSubmit={addName} \r\n        nameValue={newName} \r\n        numberValue={newPhone}\r\n        handleNameUpdate={updateName} \r\n        handlePhoneUpdate={updatePhone} \r\n    />\r\n      <h2>Numbers</h2>\r\n      <Persons filter={personsToShow} handleDelete={deleteNumber}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}